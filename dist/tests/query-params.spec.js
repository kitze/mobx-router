"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var router_store_1 = require("../src/router-store");
var routes_1 = require("./mocks/routes");
var mocks_1 = require("./mocks/mocks");
test('Router Scenario', function () {
    var router = new router_store_1.default();
    router.currentView = routes_1.default.home;
    expect(router.currentPath).toBe('/');
    router.goTo(routes_1.default.profile, { username: 'kitze' }, null, { id: 123 });
    expect(mocks_1.default.exitingHome).toBeCalled();
    expect(router.currentPath).toBe('/profile/kitze?id=123');
    expect(mocks_1.default.changingParamsProfile).toHaveBeenCalledTimes(0);
    expect(mocks_1.default.enteringProfile).lastCalledWith({ username: 'kitze' });
    router.goTo(routes_1.default.profile, { username: 'kristijan' });
    expect(router.currentPath).toBe('/profile/kristijan');
    expect(mocks_1.default.enteringProfile).toHaveBeenCalledTimes(1);
    expect(mocks_1.default.changingParamsProfile).lastCalledWith({ username: 'kristijan' }, undefined);
    expect(mocks_1.default.changingParamsProfile).toHaveBeenCalledTimes(1);
    router.goTo(routes_1.default.profile, { username: 'kristijan', tab: 'about' });
    expect(router.currentPath).toBe('/profile/kristijan/about');
    expect(mocks_1.default.enteringProfile).toHaveBeenCalledTimes(1);
    expect(mocks_1.default.changingParamsProfile).lastCalledWith({ tab: 'about', username: 'kristijan' }, undefined);
    expect(mocks_1.default.changingParamsProfile).toHaveBeenCalledTimes(2);
    router.goTo(routes_1.default.home);
    expect(router.currentPath).toBe('/');
    expect(mocks_1.default.exitingProfile).toBeCalled();
    expect(mocks_1.default.exitingProfile).lastCalledWith({ tab: 'about', username: 'kristijan' });
    expect(mocks_1.default.enteringHome).toBeCalled();
    expect(mocks_1.default.enteringHome).lastCalledWith();
    expect(mocks_1.default.changingParamsHome).not.toBeCalled();
    expect(mocks_1.default.changingParamsProfile).toHaveBeenCalledTimes(2);
    router.goTo(routes_1.default.profile, { username: 'kristijan', tab: 'about' });
    expect(router.currentPath).toBe('/profile/kristijan/about');
    expect(mocks_1.default.changingParamsProfile).lastCalledWith({ tab: 'about', username: 'kristijan' }, undefined);
    expect(mocks_1.default.changingParamsProfile).toHaveBeenCalledTimes(2);
    router.goTo(routes_1.default.profile, { username: 'kristijan', tab: 'about' });
    expect(router.currentPath).toBe('/profile/kristijan/about');
    expect(mocks_1.default.changingParamsProfile).lastCalledWith({ tab: 'about', username: 'kristijan' }, undefined);
    expect(mocks_1.default.changingParamsProfile).toHaveBeenCalledTimes(2);
    router.goTo(routes_1.default.profile, { username: 'kristijan', tab: 'about' }, null, { id: 123 });
    expect(router.currentPath).toBe('/profile/kristijan/about?id=123');
    expect(mocks_1.default.changingParamsProfile).lastCalledWith({ tab: 'about', username: 'kristijan' }, { id: 123 });
    expect(mocks_1.default.changingParamsProfile).toHaveBeenCalledTimes(3);
    router.goTo(routes_1.default.profile, { username: 'kristijan', tab: 'about' });
    expect(router.currentPath).toBe('/profile/kristijan/about');
    expect(mocks_1.default.changingParamsProfile).lastCalledWith({ tab: 'about', username: 'kristijan' }, undefined);
    expect(mocks_1.default.changingParamsProfile).toHaveBeenCalledTimes(4);
});
